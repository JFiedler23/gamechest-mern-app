[{"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\index.js":"1","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\App.js":"2","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\context\\MainContextProvider.js":"3","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\store.js":"4","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\actions\\authActions.js":"5","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\utils\\setAuthToken.js":"6","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\context\\MainContext.js":"7","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\auth\\Login.js":"8","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\layout\\Landing.js":"9","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\auth\\Register.js":"10","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\private-route\\PrivateRoute.js":"11","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\dashboard\\Dashboard.js":"12","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\actions\\types.js":"13","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\dashboard\\Card.js":"14","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\layout\\Navbar.js":"15","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\index.js":"16","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\add-modal\\AddModal.js":"17","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\authReducer.js":"18","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\errorReducer.js":"19","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\add-modal\\Form.js":"20","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\sort_filter\\SortMenu.js":"21"},{"size":353,"mtime":1613942213255,"results":"22","hashOfConfig":"23"},{"size":1637,"mtime":1611437731239,"results":"24","hashOfConfig":"23"},{"size":626,"mtime":1613942213254,"results":"25","hashOfConfig":"23"},{"size":313,"mtime":1611012227448,"results":"26","hashOfConfig":"23"},{"size":1811,"mtime":1615155379608,"results":"27","hashOfConfig":"23"},{"size":362,"mtime":1611011872070,"results":"28","hashOfConfig":"23"},{"size":244,"mtime":1613942213254,"results":"29","hashOfConfig":"23"},{"size":4911,"mtime":1613936399340,"results":"30","hashOfConfig":"23"},{"size":1540,"mtime":1611423067010,"results":"31","hashOfConfig":"23"},{"size":6254,"mtime":1613936404125,"results":"32","hashOfConfig":"23"},{"size":613,"mtime":1611100314593,"results":"33","hashOfConfig":"23"},{"size":9759,"mtime":1615155379609,"results":"34","hashOfConfig":"23"},{"size":137,"mtime":1611011488620,"results":"35","hashOfConfig":"23"},{"size":1101,"mtime":1614350012507,"results":"36","hashOfConfig":"23"},{"size":1767,"mtime":1614350012508,"results":"37","hashOfConfig":"23"},{"size":213,"mtime":1611011745242,"results":"38","hashOfConfig":"23"},{"size":922,"mtime":1615072397104,"results":"39","hashOfConfig":"23"},{"size":650,"mtime":1611012337677,"results":"40","hashOfConfig":"23"},{"size":299,"mtime":1611012363800,"results":"41","hashOfConfig":"23"},{"size":1382,"mtime":1612198380639,"results":"42","hashOfConfig":"23"},{"size":949,"mtime":1615072397106,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pgruf5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\index.js",[],["91","92"],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\App.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\context\\MainContextProvider.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\store.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\actions\\authActions.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\utils\\setAuthToken.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\context\\MainContext.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\auth\\Login.js",["93","94"],"import React, { useEffect, useState, } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction Login(props){\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n  \r\n        if (props.errors) {\r\n            setUser({...user, errors: props.errors});\r\n        }\r\n\r\n    }, [props.auth.isAuthenticated, props.errors]);\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.history.push(\"/dashboard\");\r\n        }\r\n    }, [props.auth.isAuthenticated]);\r\n\r\n    const onChange = e => {\r\n        setUser({...user, [e.target.id]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const userData = {\r\n          email: user.email,\r\n          password: user.password\r\n        };\r\n\r\n        props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    };\r\n\r\n    const { errors } = user;\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                        <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                        home\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                        <h4>\r\n                            <b>Login</b> below\r\n                        </h4>\r\n                        <p className=\"grey-text text-darken-1\">\r\n                            Don't have an account? <Link to=\"/register\">Register</Link>\r\n                        </p>\r\n                    </div>\r\n                    <form noValidate onSubmit={onSubmit}>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                                onChange={onChange}\r\n                                value={user.email}\r\n                                error={errors.email}\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                className={classnames(\"\", {\r\n                                    invalid: errors.email || errors.emailnotfound\r\n                                })}\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <span className=\"red-text\">{errors.email}{errors.emailnotfound}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                                onChange={onChange}\r\n                                value={user.password}\r\n                                error={errors.password}\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                className={classnames(\"\", {\r\n                                    invalid: errors.password || errors.passwordincorrect\r\n                                })}\r\n                            />\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <span className=\"red-text\">{errors.password}{errors.passwordincorrect}</span>\r\n                        </div>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <button\r\n                                style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                }}\r\n                                type=\"submit\"\r\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n  \r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\layout\\Landing.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\auth\\Register.js",["95","96"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction Register(props) {\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.errors) {\r\n            setUser({...user, errors: props.errors});\r\n        }\r\n    }, [props.errors]);\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.history.push(\"/dashboard\");\r\n        }\r\n    }, [props.auth.isAuthenticated]);\r\n\r\n    const onChange = e =>{\r\n        setUser({...user, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        //preventing the page from reloading on submit\r\n        e.preventDefault();\r\n\r\n        //creating the new user\r\n        const newUser = {\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n          password2: user.password2\r\n        };\r\n\r\n        props.registerUser(newUser, props.history); \r\n    };\r\n\r\n    const { errors } = user;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                        <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                        home\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                        <h4>\r\n                            <b>Register</b> below\r\n                        </h4>\r\n                        <p className=\"grey-text text-darken-1\">\r\n                            Already have an account? <Link to=\"/login\">Log in</Link>\r\n                        </p>\r\n                        <h5 className=\"grey-text text-darken-1\">\r\n                            Disclaimer: This application is a work in progress and is being used as a learning experience.\r\n                        </h5>\r\n                    </div>\r\n                    <form noValidate onSubmit={onSubmit}>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                            onChange={onChange}\r\n                            value={user.name}\r\n                            error={errors.name}\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            className={classnames(\"\", {\r\n                                invalid: errors.name\r\n                              })}\r\n                            />\r\n                            <label htmlFor=\"name\">Name</label>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                            onChange={onChange}\r\n                            value={user.email}\r\n                            error={errors.email}\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            className={classnames(\"\", {\r\n                                invalid: errors.email\r\n                              })}\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <span className=\"red-text\">{errors.email}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                            onChange={onChange}\r\n                            value={user.password}\r\n                            error={errors.password}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            className={classnames(\"\", {\r\n                                invalid: errors.password\r\n                              })}\r\n                            />\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <span className=\"red-text\">{errors.password}</span>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input\r\n                                onChange={onChange}\r\n                                value={user.password2}\r\n                                error={errors.password2}\r\n                                id=\"password2\"\r\n                                type=\"password\"\r\n                                className={classnames(\"\", {\r\n                                    invalid: errors.password2\r\n                                  })}\r\n                                />\r\n                            <label htmlFor=\"password2\">Confirm Password</label>\r\n                            <span className=\"red-text\">{errors.password2}</span>\r\n                        </div>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <button\r\n                                style={{\r\n                                    width: \"150px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"1rem\"\r\n                                }}\r\n                                type=\"submit\"\r\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                Sign up\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\private-route\\PrivateRoute.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\dashboard\\Dashboard.js",["97","98","99","100"],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\actions\\types.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\dashboard\\Card.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\layout\\Navbar.js",["101","102","103"],"import React from 'react';\r\nimport AddModal from '../add-modal/AddModal';\r\nimport SortMenu from '../sort_filter/SortMenu';\r\n\r\nfunction Navbar(props) {\r\n    /* ADD ME BACK LATER\r\n    const searchSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        console.log(e.target.search.value);\r\n    }\r\n        <li>\r\n            <form onSubmit={searchSubmit}>\r\n                <div className=\"input-field\">\r\n                <input id=\"search\" type=\"search\" required></input>\r\n                <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                <i className=\"material-icons\">close</i>\r\n                </div>\r\n            </form>\r\n        </li>\r\n        <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n    */\r\n\r\n    return( \r\n        <nav>\r\n            <div className=\"nav-wrapper red lighten-1\">\r\n                <a href=\"#\" className=\"brand-logo hide-on-small-only\">\r\n                    GameChest\r\n                    <i className=\"material-icons\">videogame_asset</i>\r\n                </a>\r\n                <a href=\"#\" className=\"hide-on-med-and-up\">GameChest</a>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    <li>\r\n                        <AddModal modalResults={props.modalResults} onSubmit={props.onModalSubmit} closeModal={props.closeModal} />\r\n                    </li>\r\n                    <li>\r\n                        <SortMenu onSortClick={props.onSortClick}></SortMenu>\r\n                    </li>\r\n                    <li><a href=\"#\" onClick={props.logoutClick}><i className=\"material-icons\">exit_to_app</i></a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\index.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\add-modal\\AddModal.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\authReducer.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\reducers\\errorReducer.js",[],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\add-modal\\Form.js",[],["104","105"],"D:\\Programming\\Web Dev\\gamechest-mern-app\\client\\src\\components\\sort_filter\\SortMenu.js",["106","107","108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":24,"column":8,"nodeType":"117","endLine":24,"endColumn":50,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":30,"column":8,"nodeType":"117","endLine":30,"endColumn":36,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":21,"column":8,"nodeType":"117","endLine":21,"endColumn":22,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"119","line":27,"column":8,"nodeType":"117","endLine":27,"endColumn":36,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"124","line":175,"column":8,"nodeType":"117","endLine":175,"endColumn":10,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"126","line":180,"column":8,"nodeType":"117","endLine":180,"endColumn":10,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"128","line":203,"column":8,"nodeType":"117","endLine":203,"endColumn":14,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":230,"column":13,"nodeType":"132","messageId":"133","endLine":231,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":27,"column":17,"nodeType":"136","endLine":27,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":31,"column":17,"nodeType":"136","endLine":31,"endColumn":60},{"ruleId":"134","severity":1,"message":"135","line":39,"column":25,"nodeType":"136","endLine":39,"endColumn":65},{"ruleId":"111","replacedBy":"137"},{"ruleId":"113","replacedBy":"138"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":7,"nodeType":"136","endLine":16,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":19,"column":13,"nodeType":"136","endLine":19,"endColumn":90},{"ruleId":"134","severity":1,"message":"135","line":20,"column":13,"nodeType":"136","endLine":20,"endColumn":65},{"ruleId":"134","severity":1,"message":"135","line":21,"column":13,"nodeType":"136","endLine":21,"endColumn":66},{"ruleId":"134","severity":1,"message":"135","line":22,"column":13,"nodeType":"136","endLine":22,"endColumn":67},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["143"],["144"],"React Hook useEffect has missing dependencies: 'getGames', 'scrollIndex', 'sorted', and 'user.id'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'getAllGames'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'getGames', 'maxScroll', 'scrollIndex', 'sorted', and 'user.id'. Either include them or remove the dependency array.",["147"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"150","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [props.auth.isAuthenticated, props.errors, props.history, user]",{"range":"161","text":"162"},"Update the dependencies array to be: [props.auth.isAuthenticated, props.history]",{"range":"163","text":"164"},"Update the dependencies array to be: [props.errors, user]",{"range":"165","text":"166"},{"range":"167","text":"164"},"Update the dependencies array to be: [getGames, scrollIndex, sorted, user.id]",{"range":"168","text":"169"},"Update the dependencies array to be: [getAllGames]",{"range":"170","text":"171"},"Update the dependencies array to be: [getGames, maxScroll, page, scrollIndex, sorted, user.id]",{"range":"172","text":"173"},[681,723],"[props.auth.isAuthenticated, props.errors, props.history, user]",[860,888],"[props.auth.isAuthenticated, props.history]",[593,607],"[props.errors, user]",[744,772],[6312,6314],"[getGames, scrollIndex, sorted, user.id]",[6440,6442],"[getAllGames]",[7155,7161],"[getGames, maxScroll, page, scrollIndex, sorted, user.id]"]